####################################################################
# Data for type E~_n Coxeter groups
#

import numpy as np

def cartanmat(n):
    if n == 7: 
        return np.array([[ 2,  0, -1,  0,  0,  0,  0],
                         [ 0,  2,  0, -1,  0,  0,  0], 
                         [-1,  0,  2,  0, -1,  0,  0],
                         [ 0, -1,  0,  2, -1,  0,  0], 
                         [ 0,  0, -1, -1,  2, -1,  0],
                         [ 0,  0,  0,  0, -1,  2, -1],
                         [ 0,  0,  0,  0,  0, -1,  2]],
                         dtype = 'int8')

    if n == 8: 
        return np.array([[ 2, -1,  0,  0,  0,  0,  0,  0],
                         [-1,  2,  0, -1,  0,  0,  0,  0],
                         [ 0,  0,  2,  0, -1,  0,  0,  0], 
                         [ 0, -1,  0,  2, -1,  0,  0,  0],
                         [ 0,  0, -1, -1,  2, -1,  0,  0], 
                         [ 0,  0,  0,  0, -1,  2, -1,  0],
                         [ 0,  0,  0,  0,  0, -1,  2, -1], 
                         [ 0,  0,  0,  0,  0,  0, -1,  2]],
                         dtype = 'int8')

    if n == 9: 
        return np.array([[ 2,  0,  0,  0,  0,  0,  0,  0, -1],
                         [ 0,  2,  0, -1,  0,  0,  0,  0,  0],
                         [ 0,  0,  2,  0, -1,  0,  0,  0,  0], 
                         [ 0, -1,  0,  2, -1,  0,  0,  0,  0],
                         [ 0,  0, -1, -1,  2, -1,  0,  0,  0], 
                         [ 0,  0,  0,  0, -1,  2, -1,  0,  0],
                         [ 0,  0,  0,  0,  0, -1,  2, -1,  0], 
                         [ 0,  0,  0,  0,  0,  0, -1,  2, -1],
                         [-1,  0,  0,  0,  0,  0,  0, -1,  2]],
                         dtype = 'int8')
    else:
        raise ValueError("Rank of E~_n must be 7, 8 or 9!")

