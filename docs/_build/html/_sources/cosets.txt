.. include:: global.rst
.. module:: pycox.coxcos

Coxeter Cosets
==============
Let us assume that `(W,\mathbb{S})` is a Coxeter system.

.. admonition:: Definition

    We say `\phi : W \to W` is a *Coxeter automorphism* of `W` if
    `\phi(\mathbb{S}) = \mathbb{S}`.

Note that such an automorphism implicitly depends upon our choice of generating
set `\mathbb{S}`. If `W` is finite then all such sets `\mathbb{S}` are
conjugate, hence in this case any automorphism is a Coxeter automorphism for
some choice of `\mathbb{S}`.

Given such a Coxeter automorphism we may consider the semidirect product
`\widetilde{W} = W \rtimes \langle \phi \rangle \cong \langle W, \phi \rangle`,
where `\langle\phi\rangle` is the cyclic subgroup of the automorphism group
`\mathrm{Aut}(W)` generated by `\phi`. Of particular importance
to representation theory is the coset

.. math:: W\phi = \{(w,\phi) \mid w \in W\} \subset \widetilde{W},

which we call a *Coxeter coset*. Below we will identify `W` with its
natural image `\{(w,1) \mid w \in W\}` in `\widetilde{W}`.

In PyCox we have implemented general algorithms for working with Coxeter
cosets, which we describe in this section. Mainly these algorithms deal with
conjugacy classes and irreducible characters.

.. warning::

    For the moment these functions only support the case where :math:`W` is
    a finite Coxeter group.

The following class implements Coxeter cosets in PyCox.

.. autoclass:: coset

Other topics of interest include:

.. toctree::

    phiconjclasses


